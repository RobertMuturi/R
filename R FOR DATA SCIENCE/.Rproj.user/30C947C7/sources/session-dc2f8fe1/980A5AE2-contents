#LAYERS
library(tidyverse)


# AESTHETIC MAPPING -------------------------------------------------------
mpg

#Left
ggplot(mpg, aes(x = displ, y = hwy, color = class)) +
  geom_point()

#Right
ggplot(mpg, aes(x = displ, y = hwy, shape = class))+
  geom_point()

#Since ggplot2 will only use six shapes at a time, by default, 
#additional groups will go unplotted when you use the shape aesthetic.

# Mapping an unordered discrete (categorical) variable (class) to an ordered
# aesthetic (size or alpha) is generally not a good idea because it implies a
# ranking that does not in fact exist.

# You can also set the visual properties of your geom manually as an argument 
# of your geom function (outside of aes())

ggplot(mpg, aes(x = displ, y = hwy))+
  geom_point(color = "blue") #make all points blue


# EXERCISE ----------------------------------------------------------------

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(
    color = "pink",
    shape = "triangle"
  )

ggplot(mpg) + 
  geom_point(aes(x = displ, y = hwy, color = "blue"))

library(ggplot2)

# Create a scatter plot with shape 21 (filled circle) and stroke aesthetic
ggplot(mtcars, aes(wt, mpg)) +
  geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)

ggplot(mpg) +
  geom_point(aes(x = displ, y = hwy, color = displ < 5))



# GEOMETRIC OBJECTS -------------------------------------------------------

#plotting the same variables on different plots
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point()

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth()


# you can change linetype for specific variables, this wont work with shape
ggplot(mpg, aes(x = displ, y = hwy, linetype = drv)) + #changing linetype to shape will be ignored
  geom_smooth()

#overlaying lines on data and using color
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  geom_smooth(aes(linetype = drv))

#you can set the group aesthetic to a categorical variable to draw multiple objects.
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth(aes(group = drv))

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth(aes(color = drv), show.legend = FALSE)

# placing mappings in a geom function, ggplot2 will treat them as local mappings for the layer only
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = class)) +
  geom_smooth()


# You can use the same idea to specify different data for each layer.
ggplot(mpg, aes(x= displ, y = hwy)) +
  geom_point()+
  geom_point(
    data = mpg |> filter(class == "2seater"),
    color = "red"
  ) +
  geom_point(
    data = mpg |> filter(class == "2seater"),
    shape = "circle open", size = 3, color = "red"
  )

# Geoms are the fundamental building blocks of ggplot2. You can completely transform 
# the look of your plot by changing its geom, and different geoms can reveal different 
# features of your data. For example, the histogram and density plot below reveal that
# the distribution of highway mileage is bimodal and right skewed while the boxplot 
# reveals two potential outliers.

# Left
ggplot(mpg, aes(x = hwy)) +
  geom_histogram(binwidth = 2)

# Middle
ggplot(mpg, aes(x = hwy)) +
  geom_density()

# Right
ggplot(mpg, aes(x = hwy)) +
  geom_boxplot()



# EXERCISE 2 --------------------------------------------------------------

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  geom_smooth(se = FALSE)

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  geom_smooth(aes(group = drv), se = FALSE)

ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point() +
  geom_smooth(se = FALSE)

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth(se = FALSE)

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv)) +
  geom_smooth(aes(linetype = drv),se = FALSE)

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(size = 3, color = "white") +
  geom_point(aes(color = drv))



# FACETS ------------------------------------------------------------------

 
